#!/bin/bash

set -e

me="${BASH_SOURCE[0]}"
mydir=$(cd $(dirname $me) && pwd)
cd $mydir

container="dbix-class-sims-test"
all_versions="5.10 5.12 5.14 5.16 5.18 5.20 5.22"

export MSYS_NO_PATHCONV=1

if [[ "$1" == "pull" ]]; then
  shift
  versions=${@:-"${all_versions}"}
  for version in ${versions}; do
    docker pull perl:${version}
  done
elif [[ "$1" == "build" ]]; then
  shift
  versions=${@:-"${all_versions}"}
  for version in ${versions}; do
    echo "Running build for perl-${version}"
    cat Dockerfile.test | sed "s/{{version}}/${version}/" \
      > Dockerfile.${version}
    docker build -t ${container}:${version} -f Dockerfile.${version} .
  done
elif [[ "$1" == "test" ]]; then
  shift
  versions=${@:-"${all_versions}"}
  for version in ${versions}; do
    echo "Running tests against perl-${version}"
    docker run \
      --rm \
      -v $(pwd)/lib:/app/lib \
      -v $(pwd)/t:/app/t \
      ${container}:${version}
  done
elif [[ "$1" == "upload" ]]; then
  shift

  if [[ ! -f ~/.pause ]]; then
    >&2 echo "No ~/.pause file found."
    exit 1
  fi

  # Because of an interaction between Docker-toolbox and Git-bash, we have to
  # copy the .pause here out of $HOME.
  cp ~/.pause .

  tag=5.22
  if [[ -z $(docker images -q ${container}:${tag}) ]]; then
    $me build ${tag}
  fi

  files_dirs_to_map=(
    lib t
    Changes LICENSE
    MANIFEST MANIFEST.SKIP
    MYMETA.json MYMETA.yml
  )

  volumes=(-v $(pwd)/.pause:/root/.pause)
  for item in ${files_dirs_to_map[@]}; do
    volumes+=(-v $(pwd)/$item:/app/$item)
  done

  docker run \
    --rm \
    "${volumes[@]}" \
    --entrypoint bash \
    ${container}:${tag} #\
      -c "carton exec perl Makefile.PL && make dist && cpan-upload"
else
  >&2 echo "${me}: <pull | build | test | upload> [version, ...]"
  exit 1
fi
